from app import db
from models import *
from factory import Factory


db.drop_all()
db.create_all()

f = Factory("Хозяин", "Следите за балансом в доме")
f.g("Кот", 10.)
f.dcg("Кот, кажется, вас ненавидит.")
f.g("Пёс", 10.)
f.dcg("Пёс сбежал, и вряд ли вернется.")
f.g("Рыбки", 5.)
f.dcg("Рыбки мертвы...")
f.p("Состояние квартиры", 10.)
f.dcp("Квартира больше не подлежит ремонту.")
f.w([-0.02, 0.02 , 0])
f.p("Бюджет", 10.)
f.dcp("Вы разорились...")
f.w([0, 0, 0])
f.p("Усталость", 7.)
f.dcp("Вы слишком устали от большого числа дел...")
f.w([-0.05, 0.05, 0])



f.a("Экономный", "Вы умеете обращаться с деньгами.", 3, 0)
f.lasta.reqs_param = [AchReqParam(param=f.s.params[1],lim=15)]

f.a("Идеальный порядок", "В вашей квартире так чисто, что все завидуют.", 0, 0)
f.lasta.reqs_param = [AchReqParam(param=f.s.params[0],lim=10)]

f.a("Первый приз", "Благодаря вашей заботе кот сильно похорошел и обошёл всех конкурентов на выставке!", 5, 0)
f.lasta.reqs_guild = [AchReqGuild(guild=f.s.guilds[0],lim=12)]

f.a("Мастер на все лапы", "Ваш пёс выучил очень много трюков и теперь приносит вам кофе по утрам.", 2, 0)
f.lasta.reqs_guild = [AchReqGuild(guild=f.s.guilds[1],lim=7)]

f.a("Модный приговор", "Ваш пёс так модно одет, что привлекает к себе восхищенные взгляды других собак.", 2, 0)
f.lasta.reqs_guild = [AchReqGuild(guild=f.s.guilds[1],lim=7)]



f.c("Кто-то подрал обои. Кого наказать?")

def answer_list(l):
    return [Answer(answer_td=TextData(text=t)) for t in l]

ans_pos = answer_list(["да", "конечно", "ага", "угу", "хорошо", "ладно", "разумеется"])

cat_rel = answer_list(["коту", "кота", "кошку", "котофея", "котяру", "кот", "котика", "котяра", "кошка", "котик", "котофей", "барсик", "барсика", "барсику"])
dog_rel = answer_list(["пёс", "собака", "пёсик", "дружок", "собачка", "пса", "собаку", "пёсика", "собачку", "дружка", "псу", "собаке", "песику", "собачке", "дружку"])
void_rel = answer_list(["никому", "никто", "никого"])
fish_rel = answer_list(["рыбы", "рыбки", "рыб", "рыбок", "рыбам", "рыбкам"])


f.o("кота")
f.og(0, -3.)
f.og(1, 0)
f.og(2, 0)
f.op(0, -1)
f.op(1, 0)
f.op(2, 0)
f.lasto.answers.extend(cat_rel)


f.o("никого")
f.og(0, 0)
f.og(1, 0)
f.og(2, 0)
f.op(0, -5)
f.op(1, -1)
f.op(2, -1)
f.lasto.answers.extend(void_rel)

f.o("пса")
f.og(0, 0)
f.og(1, -5.)
f.og(2, 0)
f.op(0, -5)
f.op(1, -1)
f.op(2, -1)
f.lasto.answers.extend(dog_rel)

f.o("рыбок")
f.og(0, 0)
f.og(1, 0)
f.og(2, 0)
f.op(0, -5)
f.op(1, -1)
f.op(2, -1)
f.lasto.answers.extend(fish_rel)

f.c("Какой корм для кота лучше купить?")

f.o("никакого")
f.og(0, -3.)
f.og(1, 0)
f.og(2, -5)
f.op(0, 0)
f.op(1, 0)
f.op(2, 0)
f.ans(["лучше не покупать","пусть охотится", "не покупать", "не надо", "пусть сам охотится"])
f.lasto.status_td = TextData(text = "Кот оголодал и напал на рыбок...")

f.o("дорогой")
f.og(0, 3)
f.og(1, 0)
f.og(2, 0)
f.op(0, -1)
f.op(1, -3)
f.op(2, -1)
f.ans(["хороший", "получше", "подороже", "элитный", "самый лучший", "вкусный", "самый вкусный"])

f.o("подешевле")
f.og(0, -1)
f.og(1, 0)
f.og(2, 0)
f.op(0, 0)
f.op(1, 0)
f.op(2, 0)
f.oa(0,1)
f.ans(["простой", "обычный", "нормальный", "недорогой", "попроще"])

f.c("Какой корм для рыбок лучше купить?")
f.o("никакого")
f.oall("Рыбки какие-то вялые от голода.\n", [0, 0, -2], [0, 2, 0], [])
f.o("подешевле")
f.oall("", [0, 0, -0.5], [0, 0.5, 0], [(0,1)])
f.o("подороже")
f.oall("", [0, 0,  2], [0, -2, 0], [(0,-1)])

f.c("Какой корм лучше купить псу - дешевый или дорогой?")
f.o("никакого")
f.ans(["лучше не покупать","пусть охотится", "не покупать", "не надо", "пусть сам охотится"])
f.oall("Пёс жалостно скулит.\n", [0,-4, 0], [-1, 4, 1], [])
f.o("дешевый")
f.oall("", [0,-1, 0], [0, 1, 0], [(0, 1)])
f.ans(["простой", "обычный", "нормальный", "недорогой", "попроще", "подешевле"])
f.o("дорогой")
f.oall("", [0, 4, 0], [0, -2, 0], [(0, -1)])
f.ans(["хороший", "получше", "подороже", "элитный", "самый лучший", "вкусный", "самый вкусный"])


f.c("В магазине отличное предложение - пять в одном: корм для кошек, корм для собак, корм для рыбок, наполнитель для лотков, стиральный порошок, все в одном флаконе и по очень привлекательной цене. Возьмете?")
f.o("да")
f.lasto.answers.extend(ans_pos)
f.ans(["возьму", "куплю", "беру"])
f.oall("Всем теперь нужен поход к ветеринару.\n ", [-3, -3, -1], [-1, 5, 0], [])
f.o("нет")
f.oall("", [0,0,0], [0,-3, 0], [])
f.ans(["не буду", "не стану", "не возьму", "не буду брать"])


f.c("Кот давно не мылся. Стоит ли его купать?")
f.o("да")
f.lasto.answers.extend(ans_pos)
f.ans(["стоит", "надо", "обязательно"])
f.oall("", [-3, 0, 0], [2, 0, -1], [(2,1)])
f.o("нет")
f.ans(["не стоит", "не надо"])
f.oall("", [1, 0, 0], [-1, 0, 1], [(2,-1)])


f.c("Кот как-то странно смотрит на аквариум. Принять меры?")
f.o("да")
f.oall("Преступление предотвращено. \n", [-1, 0, 1], [2, 0, 0], [])
f.lasto.answers.extend(ans_pos)
f.ans(["принять", "наказать", "принять меры", "приму меры"])
f.o("нет")
f.ans(["ну и пусть смотрит", "ну и ладно", "не принимать", "не надо"])
f.oall("Когда вы отвернулись, кот напал одну из рыбок.\n", [2, 0, -4], [0, 1, 2], [])



f.c("Кажется, котик заболел. Пойдете к ветеринару, или обойдется?")
f.o("пойду")
f.oall("Оказалось ничего страшного.\n ", [3, 0, 0], [1, -3, -1], [(2, 1)])
f.lasto.answers.extend(ans_pos)
f.o("нет")
f.oall("Через какое-то время сам поправится. Наверное...\n", [-2, 0, 0], [-1, 3, 1], [(2, -1)])
f.ans(["не пойду", "обойдется", "сам выздоровеет"])


f.c("Ваши животные скучают дома одни, а вас начальство просит задержаться на работе. Останетесь?")
f.o("да")
f.oall("Вам дали премию.\n ", [-1, -2, -0.5], [-2, 5, -2], [])
f.ans(["да", "задержусь", "останусь", "соглашусь"])
f.lasto.answers.extend(ans_pos)
f.o("нет")
f.oall("", [1, 2, 0.5], [1, -1, 2], [])
f.ans(["откажусь", "не стану", "не буду", "не задержусь", "поеду домой", "пойду домой"])


f.c("Кажется, вы проспали и опаздываете на работу, но надо же погулять с псом... Как поступите?")
f.o("погуляю")
f.oall("Вам сделали выговор.\n", [0, 3, 0], [2, -3, -1], [])
f.ans(["сначала погуляю", "обязательно погуляю", "погуляю с псом", "погуляю с собакой"])
f.o("поспешу на работу")
f.ans(["побегу", "побегу на работу", "буду спешить на работу", "не буду гулять", "не погуляю"])
f.oall("", [0, -2, 0], [-3, 0, 2], [])

"""
f.c("Вам пора выходить из дома в гости, а кот заснул у вас на коленях. Разбудите?")
f.o("да")
f.oall("", [], [], [])
f.ans(["пусть просыпается", "разбужу"])
f.lasto.answers.extend(ans_pos)
f.o("нет")
f.oall("Вас заждались, но зато котику приятно. ", [2, 0, 0], [1, 0, 1], [])
f.ans(["не стану", "не буду будить", "не разбужу", "пусть спит"])




f.c("Кот стал просить еду чаще обычного, стоит ли его баловать?")
f.o("")
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()


f.c("Собака на прогулке лает на всех прохожих. Может, купите намордик?")
f.o("да")
f.oall()
f.ans("куплю", "пожалуй куплю")
f.lasto.answers.extend(ans_pos)
f.o("нет")
f.oall()



f.c("У рыбок очень грязный аквариум, а у вас много рабочих дел. Чем займетесь - аквариумом или делами?")
f.o("")
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()


f.c("")
f.c("Кот сильно линяет в последнее время, будете покупать витамины?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

f.c("У собаки сухой нос, вызовете ветеринара на дом?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

f.c("Домики для котов такие милые. Может, порадуете своего кота?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

f.c("У собаки сухой нос, вызовете ветеринара на дом?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

f.c("Представилась отличная возможность отправиться в недельное путешествие, воспользуетесь ею?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

f.c("Собака сгрызла свою любимую игрушку. Станете покупать новую?")
f.o("") 
f.oall()
f.o("")
f.oall()
f.o("")
f.oall()

"""

f.c("Время праздников. Купите новогодние костюмчики для кота и пса?")
f.o("нет")
f.oall("", [0, 0, -1], [0, 0, 0], [])
f.ans(["не стану",  "зачем", "не буду"])
f.o("да")
f.ans(["стану",  "возьму", "куплю"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 0, 1], [1, -1, 0], [])

f.c("Кажется, зимой собака мерзнет на улице. Может, стоит купить теплый комбинезон для нее")
f.o("нет")
f.oall("", [0, 0, -1], [0, 0, 0], [])
f.ans(["не надо",  "зачем", "не куплю" ,  "не стоит"])
f.o("да")
f.ans(["стану",  "беру", "куплю" ,  "стоит"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 0, 1], [1, -1, 0], [(4, 1)])

f.c("Кот неловким движением хвоста уронил вазу. Она разбилась. Станете его наказывать?")
f.o("нет")
f.ans(["не стану",  "не буду",  "не стану наказывать"])
f.oall("", [1, 0, 0], [-1, 0, 0], [])

f.o("да")
f.ans(["стану",  "накажу",  "стану наказывать"])
f.lasto.answers.extend(ans_pos)
f.oall("", [-1, 0, 0], [-1, 0, 0], [])

f.c("В магазинах появились инновационные фильтры для воды в аквариуме. Станете брать?")
f.o("нет")
f.oall("", [0, 0, -1], [0, 0, 0], [])
f.ans(["не надо",  "зачем", "не куплю", "не стану", "не буду"])
f.o("да")
f.ans(["стану",  "возьму", "куплю"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 0, 1], [1, -1, 2], [])

f.c("Кот принес вам убитую им мышь, но вы не голодны. Оставите на память или выкинете?")
f.o("оставлю") 
f.ans(["оставлю на память ",  "сохраню", "первое"])
f.oall("", [1, 1, 0], [-3, 0, 0], [])
f.o("выкину")
f.ans( ["не буду оставлять",  "второе"])
f.oall("", [-1, 0, 0], [0, 0, 0], [])

f.c("Ваш друг посоветовал книгу о дрессировке собак, станете читать?")
f.o("нет")
f.oall("", [0, -1, 0], [0, 0, 0], [])
f.o("да")
f.ans(["почитаю",  "прочитаю"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 2, 0], [0, 0, 0], [(3, 1)])


f.c("Если заниматься с собакой каждый день, она сможет выполнять много команд. Добавите упражнения в свою рутину?")
f.o("нет")
f.oall("", [0, 0, 0], [0, 0, 0], [])
f.ans(["не надо",  "зачем", "не куплю", "не стану", "не буду"])
f.o("да")
f.ans(["стану",  "возьму", "куплю"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 2, 0], [0, 0, -1], [(3, 1)])

f.c("В тридцати минутах от вас открылась площадка для собак. Будете отводить туда своего пса по утрам?")
f.o("нет")
f.oall("", [0, -1, 0], [0, 0, 0], [])
f.ans(["не надо",  "зачем", "не стану", "не буду"])
f.o("да")
f.ans(["стану",  "буду", "иногда"])
f.lasto.answers.extend(ans_pos)
f.oall("", [0, 0, 0], [0, 0, -1], [(3, 1)])

f.c("Все животные любят компанию. Договоритесь с соседом выгуливать ваших собак вместе?")
f.o("нет")
f.oall("", [0, -1, 0], [0, 0, 0], [])
f.ans(["не надо",  "зачем", "не стану", "не буду"])
f.o("да")
f.ans(["договорюсь",  "попробую", "можно попробовать"])
f.oall("", [0, 1, 0], [0, 0, 0], [(3, 1)])

f.c("Животные больше не любят стоячую воду. Может, купите поилку-фонтан для своих питомцев?")
f.o("куплю") 
f.lasto.answers.extend(ans_pos)
f.oall("Теперь животные больше пьют, а вода всегда чистая, это хорошо влияет на их здоровье\n", [1, 1, 0], [0, -2, 0], [])
f.o("нет")
f.ans(["нет", "не буду покупать", "не куплю"])
f.oall("В конце концов всегда можно попить из аквариума…\n", [-1, -1, -1], [0, 1, 0], [(0, 1)])


dial = Factory.d(rules_q="Привет! Объяснить правила?", 
                     rules=("Этот навык - игра, в которой нужно делать выборы так, чтобы все "
                            "остались довольны. Пока что доступен только один сценарий, но мы "
                            "стараемся сделать больше. В сценарии, в который вам предлагается " 
                            "сыграть, вы - владелец домашних животных - кота, пса и рыбок. Вам нужно следить как за ними, "
                            "так и за квартирой, бюджетом и собственными жизненными силами. Приступим?"),
                     help=("В этой игре у вас есть кот, пёс и рыбки, и вы должны следить, "
                           "чтобы у них всё было хорошо, за состоянием квартиры, бюджетом и собственным запасом сил. "
                           "Чтобы услышать, какие есть варианты в текущем выборе, скажите слово 'подсказка'"
                           ", для выхода скажите 'хватит'."),
                     hint="Возможные варианты: {}",
                     no_choices="Вы отлично справились!",
                     fin="Ваши достижения: {}",
                     goodbye="Пока!"
                     )
for di in dial:
    db.session.add(di)

utters = Factory.du(utt_neg=["нет", "не хочу", "не надо", "не"],
                        utt_pos=["да", "давай", "ладно", "окей"],
                        utt_quit=["хватит", "выход", "конец игры"],
                        utt_repeat=["ещё раз", "повтори", "что"],
                        utt_help=["помощь", "не понимаю", "что нужно", "что ты хочешь"],
                        utt_hint=["варианты", "подсказка"]
                        )
for ut in utters:
    db.session.add(ut)

db.session.add(f.s)
db.session.commit()